<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191114 19:20:58.734" generator="Robot 3.1.2 (Python 2.7.16 on win32)">
<suite source="C:\Users\bharadwajg\eclipse-workspace\VLB_Sanity\vlb_sanity.robot" id="s1" name="Vlb Sanity">
<test id="s1-t1" name="CheckVLBstatus">
<kw name="QueryVNFM" library="MavKeywords">
<doc>This keyword queries VNFM db. Return value data structure = [{},{},{},{},.......]</doc>
<arguments>
<arg>select d.VM_Name,v.Fixed_ip_address from Deployment_Table d ,VM_Resource_Details v where v.DeploymentId = d.Id and v.connectionPointIndex like '%OAM%' and v.connectionPointIndex not like '%SDNS%' and v.connectionPointIndex like '%RE%' and d.VM_Name like '%SIP%'</arg>
</arguments>
<assign>
<var>@{vlblist}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:20:58.950" starttime="20191114 19:20:58.950"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:20:58.950" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:02.725" level="INFO">Read output: Last login: Thu Nov 14 13:49:55 UTC 2019 from 10.10.193.140 on pts/2
Last login: Thu Nov 14 13:51:00 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:02.725" starttime="20191114 19:20:58.950"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mysql -uroot -pmavenir VnfmDB -e "${statement}";</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191114 19:21:02.725" level="INFO">Executing command 'mysql -uroot -pmavenir VnfmDB -e "select d.VM_Name,v.Fixed_ip_address from Deployment_Table d ,VM_Resource_Details v where v.DeploymentId = d.Id and v.connectionPointIndex like '%OAM%' and v.connectionPointIndex not like '%SDNS%' and v.connectionPointIndex like '%RE%' and d.VM_Name like '%SIP%'";'.</msg>
<msg timestamp="20191114 19:21:03.243" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:03.243" level="INFO">${Query_result} = VM_Name	Fixed_ip_address
Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202
Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:02.725"></status>
</kw>
<kw name="manipulateQueryResult" library="MavKeywords">
<doc>This keyword converts str data to a list containing dictionaries</doc>
<arguments>
<arg>${Query_result}</arg>
</arguments>
<assign>
<var>@{rowsReturned}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:03.243" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${queryResult}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rows_with_header}</var>
</assign>
<msg timestamp="20191114 19:21:03.243" level="INFO">@{rows_with_header} = [ VM_Name	Fixed_ip_address | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202 | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${rows_with_header}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>@{rows}</var>
</assign>
<msg timestamp="20191114 19:21:03.243" level="INFO">@{rows} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202 | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${rows_with_header[0]}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{columns}</var>
</assign>
<msg timestamp="20191114 19:21:03.243" level="INFO">@{columns} = [ VM_Name | Fixed_ip_address ]</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw type="for" name="${eachrow} IN [ @{rows} ]">
<kw type="foritem" name="${eachrow} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1&#09;192.168.50.202">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{rowDict}</var>
</assign>
<msg timestamp="20191114 19:21:03.243" level="INFO">&amp;{rowDict} = { }</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${eachrow}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{rowData}</var>
</assign>
<msg timestamp="20191114 19:21:03.243" level="INFO">@{rowData} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1 | 192.168.50.202 ]</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw name="handleRow" library="MavKeywords">
<arguments>
<arg>${columns}</arg>
<arg>${rowData}</arg>
<arg>${rowDict}</arg>
</arguments>
<assign>
<var>${rowDict}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:03.243" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw type="for" name="${columnname} | ${value} IN ZIP [ ${columns} | ${rowData} ]">
<kw type="foritem" name="${columnname} = VM_Name, ${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw type="foritem" name="${columnname} = Fixed_ip_address, ${value} = 192.168.50.202">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<msg timestamp="20191114 19:21:03.243" level="INFO">${rowDict} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'}</msg>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${returnResult}</arg>
<arg>${rowDict}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.243" starttime="20191114 19:21:03.243"></status>
</kw>
<kw type="foritem" name="${eachrow} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2&#09;192.168.50.203">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{rowDict}</var>
</assign>
<msg timestamp="20191114 19:21:03.250" level="INFO">&amp;{rowDict} = { }</msg>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${eachrow}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{rowData}</var>
</assign>
<msg timestamp="20191114 19:21:03.250" level="INFO">@{rowData} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2 | 192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<kw name="handleRow" library="MavKeywords">
<arguments>
<arg>${columns}</arg>
<arg>${rowData}</arg>
<arg>${rowDict}</arg>
</arguments>
<assign>
<var>${rowDict}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:03.250" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<kw type="for" name="${columnname} | ${value} IN ZIP [ ${columns} | ${rowData} ]">
<kw type="foritem" name="${columnname} = VM_Name, ${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<kw type="foritem" name="${columnname} = Fixed_ip_address, ${value} = 192.168.50.203">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<msg timestamp="20191114 19:21:03.250" level="INFO">${rowDict} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.168.50.203'}</msg>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${returnResult}</arg>
<arg>${rowDict}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.243"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.243"></status>
</kw>
<msg timestamp="20191114 19:21:03.250" level="INFO">@{rowsReturned} = [ {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'} | {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.1...</msg>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.243"></status>
</kw>
<msg timestamp="20191114 19:21:03.250" level="INFO">@{vlblist} = [ {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'} | {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.1...</msg>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:20:58.950"></status>
</kw>
<kw type="for" name="${vlb} IN [ @{vlblist} ]">
<kw type="foritem" name="${vlb} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'}">
<kw name="readShm" library="MavKeywords">
<arguments>
<arg>${vlb.Fixed_ip_address}</arg>
</arguments>
<assign>
<var>&amp;{vlb_readShm}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:03.250" starttime="20191114 19:21:03.250"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:03.250" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:06.961" level="INFO">Read output: Last login: Thu Nov 14 13:51:01 UTC 2019 from 10.10.193.140 on pts/0
Last login: Thu Nov 14 13:51:04 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:06.961" starttime="20191114 19:21:03.250"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ssh ${VNF_IP} /usr/IMS/current/bin/readShm</arg>
</arguments>
<assign>
<var>${readShm_out}</var>
</assign>
<msg timestamp="20191114 19:21:06.961" level="INFO">Executing command 'ssh 192.168.50.202 /usr/IMS/current/bin/readShm'.</msg>
<msg timestamp="20191114 19:21:07.634" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:07.634" level="INFO">${readShm_out} = vnf Ovld Level:  0
lvn Ovld Level:  0
Process State    :  STATE_INS_ACTIVE    
Process OvldLevel:  0       
------------- VNF Information -----------------------
  vnfmLcmAddress :  192.168.50.249:808...</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:06.961"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{readShm_data}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">&amp;{readShm_data} = { }</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${readShm_out}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{readShm_lines}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">@{readShm_lines} = [ vnf Ovld Level:  0 | lvn Ovld Level:  0 | Process State    :  STATE_INS_ACTIVE     | Process OvldLevel:  0        | ------------- VNF Information ----------------------- |   vnfmLcmAddress :  192.16...</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw type="for" name="${item} IN [ @{readShm_lines} ]">
<kw type="foritem" name="${item} = vnf Ovld Level:  0">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">@{row} = [ vnf Ovld Level |   0 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${key} = vnf Ovld Level</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${value} = 0</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw type="foritem" name="${item} = lvn Ovld Level:  0">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">@{row} = [ lvn Ovld Level |   0 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${key} = lvn Ovld Level</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${value} = 0</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw type="foritem" name="${item} = Process State    :  STATE_INS_ACTIVE    ">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">@{row} = [ Process State     |   STATE_INS_ACTIVE     ]</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${key} = Process State</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${value} = STATE_INS_ACTIVE</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw type="foritem" name="${item} = Process OvldLevel:  0       ">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">@{row} = [ Process OvldLevel |   0        ]</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${key} = Process OvldLevel</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${value} = 0</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw type="foritem" name="${item} = ------------- VNF Information -----------------------">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<msg timestamp="20191114 19:21:07.634" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw type="foritem" name="${item} =   vnfmLcmAddress :  192.168.50.249:8080">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">@{row} = [   vnfmLcmAddress  |   192.168.50.249 | 8080 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${key} = vnfmLcmAddress</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${value} = 192.168.50.249</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw type="foritem" name="${item} =   vnfmMonAddress :  192.168.50.249:8080">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">@{row} = [   vnfmMonAddress  |   192.168.50.249 | 8080 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.634" level="INFO">${key} = vnfmMonAddress</msg>
<status status="PASS" endtime="20191114 19:21:07.634" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = 192.168.50.249</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.634"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.634"></status>
</kw>
<kw type="foritem" name="${item} =   netconfAddress :  192.168.50.202:2022">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">@{row} = [   netconfAddress  |   192.168.50.202 | 2022 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${key} = netconfAddress</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = 192.168.50.202</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   systemId       :  79007be7-f485-4650-b43b-9adb171a4f2c">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">@{row} = [   systemId        |   79007be7-f485-4650-b43b-9adb171a4f2c ]</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${key} = systemId</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = 79007be7-f485-4650-b43b-9adb171a4f2c</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   lvnId          :  FE_RE_LVN_1-10">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">@{row} = [   lvnId           |   FE_RE_LVN_1-10 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${key} = lvnId</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = FE_RE_LVN_1-10</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   lvnState       :  OOS">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">@{row} = [   lvnState        |   OOS ]</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${key} = lvnState</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = OOS</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   vnfId          :  2077">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">@{row} = [   vnfId           |   2077 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${key} = vnfId</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = 2077</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   mateVnfId      :  0">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">@{row} = [   mateVnfId       |   0 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${key} = mateVnfId</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = 0</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   vnfHAMode      :  ACTIVE">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">@{row} = [   vnfHAMode       |   ACTIVE ]</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${key} = vnfHAMode</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = ACTIVE</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   LCM Event      :  Start Success">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">@{row} = [   LCM Event       |   Start Success ]</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${key} = LCM Event</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.649" level="INFO">${value} = Start Success</msg>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   vnfState       :  Configured Active">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.649" starttime="20191114 19:21:07.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">@{row} = [   vnfState        |   Configured Active ]</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">${key} = vnfState</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">${value} = Configured Active</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.649"></status>
</kw>
<kw type="foritem" name="${item} =   vnfType        :  SIPRE">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">@{row} = [   vnfType         |   SIPRE ]</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">${key} = vnfType</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">${value} = SIPRE</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw type="foritem" name="${item} =   vnfSpId        :  1740">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">@{row} = [   vnfSpId         |   1740 ]</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">${key} = vnfSpId</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">${value} = 1740</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw type="foritem" name="${item} =   deployment mode:&#09;Normal">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.665" level="INFO">@{row} = [   deployment mode | 	Normal ]</msg>
<status status="PASS" endtime="20191114 19:21:07.665" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.671" level="INFO">${key} = deployment mode</msg>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.665"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.671" level="INFO">${value} = Normal</msg>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.665"></status>
</kw>
<kw type="foritem" name="${item} = ------------- VIM  Information -----------------------">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<msg timestamp="20191114 19:21:07.671" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw type="foritem" name="${item} = vimId: Openstack-10.69.30.40-vlbfe-st-vlbfe-st   vimType: Openstack   vimVersion: Newton">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:07.671" level="INFO">@{row} = [ vimId |  Openstack-10.69.30.40-vlbfe-st-vlbfe-st   vimType |  Openstack   vimVersion |  Newton ]</msg>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:07.671" level="INFO">${key} = vimId</msg>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:07.671" level="INFO">${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st   vimType</msg>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.634"></status>
</kw>
<msg timestamp="20191114 19:21:07.671" level="INFO">&amp;{vlb_readShm} = { vnf Ovld Level=0 | lvn Ovld Level=0 | Process State=STATE_INS_ACTIVE | Process OvldLevel=0 | vnfmLcmAddress=192.168.50.249 | vnfmMonAddress=192.168.50.249 | netconfAddress=192.168.50.202 | systemId=...</msg>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:03.250"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>&amp;{vlb_readShm}</arg>
</arguments>
<msg timestamp="20191114 19:21:07.671" level="INFO">vnf Ovld Level=0</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">lvn Ovld Level=0</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">Process State=STATE_INS_ACTIVE</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">Process OvldLevel=0</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">vnfmLcmAddress=192.168.50.249</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">vnfmMonAddress=192.168.50.249</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">netconfAddress=192.168.50.202</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">systemId=79007be7-f485-4650-b43b-9adb171a4f2c</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">lvnId=FE_RE_LVN_1-10</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">lvnState=OOS</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">vnfId=2077</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">mateVnfId=0</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">vnfHAMode=ACTIVE</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">LCM Event=Start Success</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">vnfState=Configured Active</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">vnfType=SIPRE</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">vnfSpId=1740</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">deployment mode=Normal</msg>
<msg timestamp="20191114 19:21:07.671" level="INFO">vimId=Openstack-10.69.30.40-vlbfe-st-vlbfe-st   vimType</msg>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${vlb_readShm}</arg>
<arg>Configured Active</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${vlb_readShm}</arg>
<arg>Start Success</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:03.250"></status>
</kw>
<kw type="foritem" name="${vlb} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.168.50.203'}">
<kw name="readShm" library="MavKeywords">
<arguments>
<arg>${vlb.Fixed_ip_address}</arg>
</arguments>
<assign>
<var>&amp;{vlb_readShm}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:07.671" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:07.671" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:11.405" level="INFO">Read output: Last login: Thu Nov 14 13:51:05 UTC 2019 from 10.10.193.140 on pts/1
Last login: Thu Nov 14 13:51:08 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:11.405" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ssh ${VNF_IP} /usr/IMS/current/bin/readShm</arg>
</arguments>
<assign>
<var>${readShm_out}</var>
</assign>
<msg timestamp="20191114 19:21:11.405" level="INFO">Executing command 'ssh 192.168.50.203 /usr/IMS/current/bin/readShm'.</msg>
<msg timestamp="20191114 19:21:12.086" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:12.086" level="INFO">${readShm_out} = vnf Ovld Level:  0
lvn Ovld Level:  0
Process State    :  STATE_INS_ACTIVE    
Process OvldLevel:  0       
------------- VNF Information -----------------------
  vnfmLcmAddress :  192.168.50.249:808...</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:11.405"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{readShm_data}</var>
</assign>
<msg timestamp="20191114 19:21:12.086" level="INFO">&amp;{readShm_data} = { }</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${readShm_out}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{readShm_lines}</var>
</assign>
<msg timestamp="20191114 19:21:12.086" level="INFO">@{readShm_lines} = [ vnf Ovld Level:  0 | lvn Ovld Level:  0 | Process State    :  STATE_INS_ACTIVE     | Process OvldLevel:  0        | ------------- VNF Information ----------------------- |   vnfmLcmAddress :  192.16...</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw type="for" name="${item} IN [ @{readShm_lines} ]">
<kw type="foritem" name="${item} = vnf Ovld Level:  0">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.086" level="INFO">@{row} = [ vnf Ovld Level |   0 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.086" level="INFO">${key} = vnf Ovld Level</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.086" level="INFO">${value} = 0</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw type="foritem" name="${item} = lvn Ovld Level:  0">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.086" level="INFO">@{row} = [ lvn Ovld Level |   0 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.086" level="INFO">${key} = lvn Ovld Level</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.086" level="INFO">${value} = 0</msg>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw type="foritem" name="${item} = Process State    :  STATE_INS_ACTIVE    ">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.086" starttime="20191114 19:21:12.086"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [ Process State     |   STATE_INS_ACTIVE     ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = Process State</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = STATE_INS_ACTIVE</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.086"></status>
</kw>
<kw type="foritem" name="${item} = Process OvldLevel:  0       ">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [ Process OvldLevel |   0        ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = Process OvldLevel</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = 0</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} = ------------- VNF Information -----------------------">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<msg timestamp="20191114 19:21:12.092" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} =   vnfmLcmAddress :  192.168.50.249:8080">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [   vnfmLcmAddress  |   192.168.50.249 | 8080 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = vnfmLcmAddress</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = 192.168.50.249</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} =   vnfmMonAddress :  192.168.50.249:8080">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [   vnfmMonAddress  |   192.168.50.249 | 8080 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = vnfmMonAddress</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = 192.168.50.249</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} =   netconfAddress :  192.168.50.203:2022">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [   netconfAddress  |   192.168.50.203 | 2022 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = netconfAddress</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = 192.168.50.203</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} =   systemId       :  dee9a5cf-001e-48bd-8e56-076a613d4301">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [   systemId        |   dee9a5cf-001e-48bd-8e56-076a613d4301 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = systemId</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = dee9a5cf-001e-48bd-8e56-076a613d4301</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} =   lvnId          :  FE_RE_LVN_1-10">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [   lvnId           |   FE_RE_LVN_1-10 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = lvnId</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = FE_RE_LVN_1-10</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} =   lvnState       :  OOS">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [   lvnState        |   OOS ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = lvnState</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = OOS</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} =   vnfId          :  2078">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">@{row} = [   vnfId           |   2078 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${key} = vnfId</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.092" level="INFO">${value} = 2078</msg>
<status status="PASS" endtime="20191114 19:21:12.092" starttime="20191114 19:21:12.092"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.092"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.092"></status>
</kw>
<kw type="foritem" name="${item} =   mateVnfId      :  0">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">@{row} = [   mateVnfId       |   0 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${key} = mateVnfId</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${value} = 0</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw type="foritem" name="${item} =   vnfHAMode      :  ACTIVE">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">@{row} = [   vnfHAMode       |   ACTIVE ]</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${key} = vnfHAMode</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${value} = ACTIVE</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw type="foritem" name="${item} =   LCM Event      :  Start Success">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">@{row} = [   LCM Event       |   Start Success ]</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${key} = LCM Event</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${value} = Start Success</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw type="foritem" name="${item} =   vnfState       :  Configured Active">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">@{row} = [   vnfState        |   Configured Active ]</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${key} = vnfState</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${value} = Configured Active</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw type="foritem" name="${item} =   vnfType        :  SIPRE">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">@{row} = [   vnfType         |   SIPRE ]</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${key} = vnfType</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${value} = SIPRE</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw type="foritem" name="${item} =   vnfSpId        :  1741">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">@{row} = [   vnfSpId         |   1741 ]</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${key} = vnfSpId</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${value} = 1741</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw type="foritem" name="${item} =   deployment mode:&#09;Normal">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">@{row} = [   deployment mode | 	Normal ]</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${key} = deployment mode</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${value} = Normal</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw type="foritem" name="${item} = ------------- VIM  Information -----------------------">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<msg timestamp="20191114 19:21:12.108" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw type="foritem" name="${item} = vimId: Openstack-10.69.30.40-vlbfe-st-vlbfe-st   vimType: Openstack   vimVersion: Newton">
<kw name="Continue For Loop If" library="BuiltIn">
<doc>Skips the current for loop iteration if the ``condition`` is true.</doc>
<arguments>
<arg>'------------' in '${item}'</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${item}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{row}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">@{row} = [ vimId |  Openstack-10.69.30.40-vlbfe-st-vlbfe-st   vimType |  Openstack   vimVersion |  Newton ]</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[0]</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${key} = vimId</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Strip String" library="String">
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<arguments>
<arg>@{row}[1]</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20191114 19:21:12.108" level="INFO">${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st   vimType</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${readShm_data}</arg>
<arg>${key}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.108"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:12.086"></status>
</kw>
<msg timestamp="20191114 19:21:12.108" level="INFO">&amp;{vlb_readShm} = { vnf Ovld Level=0 | lvn Ovld Level=0 | Process State=STATE_INS_ACTIVE | Process OvldLevel=0 | vnfmLcmAddress=192.168.50.249 | vnfmMonAddress=192.168.50.249 | netconfAddress=192.168.50.203 | systemId=...</msg>
<status status="PASS" endtime="20191114 19:21:12.108" starttime="20191114 19:21:07.671"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>&amp;{vlb_readShm}</arg>
</arguments>
<msg timestamp="20191114 19:21:12.123" level="INFO">vnf Ovld Level=0</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">lvn Ovld Level=0</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">Process State=STATE_INS_ACTIVE</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">Process OvldLevel=0</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">vnfmLcmAddress=192.168.50.249</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">vnfmMonAddress=192.168.50.249</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">netconfAddress=192.168.50.203</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">systemId=dee9a5cf-001e-48bd-8e56-076a613d4301</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">lvnId=FE_RE_LVN_1-10</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">lvnState=OOS</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">vnfId=2078</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">mateVnfId=0</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">vnfHAMode=ACTIVE</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">LCM Event=Start Success</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">vnfState=Configured Active</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">vnfType=SIPRE</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">vnfSpId=1741</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">deployment mode=Normal</msg>
<msg timestamp="20191114 19:21:12.123" level="INFO">vimId=Openstack-10.69.30.40-vlbfe-st-vlbfe-st   vimType</msg>
<status status="PASS" endtime="20191114 19:21:12.123" starttime="20191114 19:21:12.108"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${vlb_readShm}</arg>
<arg>Configured Active</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.123" starttime="20191114 19:21:12.123"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${vlb_readShm}</arg>
<arg>Start Success</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.123" starttime="20191114 19:21:12.123"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.123" starttime="20191114 19:21:07.671"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.123" starttime="20191114 19:21:03.250"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:12.123" critical="yes" starttime="20191114 19:20:58.950"></status>
</test>
<test id="s1-t2" name="CheckExt_ip">
<kw name="QueryVNFM" library="MavKeywords">
<doc>This keyword queries VNFM db. Return value data structure = [{},{},{},{},.......]</doc>
<arguments>
<arg>select d.VM_Name,v.Fixed_ip_address from Deployment_Table d ,VM_Resource_Details v where v.DeploymentId = d.Id and v.connectionPointIndex like '%OAM%' and v.connectionPointIndex not like '%SDNS%' and v.connectionPointIndex like '%RE%' and d.VM_Name like '%SIP%'</arg>
</arguments>
<assign>
<var>@{vlblist}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:12.123" starttime="20191114 19:21:12.123"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:12.123" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:15.904" level="INFO">Read output: Last login: Thu Nov 14 13:51:09 UTC 2019 from 10.10.193.140 on pts/2
Last login: Thu Nov 14 13:51:13 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:15.904" starttime="20191114 19:21:12.123"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mysql -uroot -pmavenir VnfmDB -e "${statement}";</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191114 19:21:15.904" level="INFO">Executing command 'mysql -uroot -pmavenir VnfmDB -e "select d.VM_Name,v.Fixed_ip_address from Deployment_Table d ,VM_Resource_Details v where v.DeploymentId = d.Id and v.connectionPointIndex like '%OAM%' and v.connectionPointIndex not like '%SDNS%' and v.connectionPointIndex like '%RE%' and d.VM_Name like '%SIP%'";'.</msg>
<msg timestamp="20191114 19:21:16.438" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:16.438" level="INFO">${Query_result} = VM_Name	Fixed_ip_address
Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202
Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203</msg>
<status status="PASS" endtime="20191114 19:21:16.438" starttime="20191114 19:21:15.904"></status>
</kw>
<kw name="manipulateQueryResult" library="MavKeywords">
<doc>This keyword converts str data to a list containing dictionaries</doc>
<arguments>
<arg>${Query_result}</arg>
</arguments>
<assign>
<var>@{rowsReturned}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:16.439" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:16.439" starttime="20191114 19:21:16.439"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${queryResult}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rows_with_header}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{rows_with_header} = [ VM_Name	Fixed_ip_address | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202 | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.439"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${rows_with_header}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>@{rows}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{rows} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202 | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${rows_with_header[0]}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{columns}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{columns} = [ VM_Name | Fixed_ip_address ]</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw type="for" name="${eachrow} IN [ @{rows} ]">
<kw type="foritem" name="${eachrow} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1&#09;192.168.50.202">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{rowDict}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">&amp;{rowDict} = { }</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${eachrow}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{rowData}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{rowData} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1 | 192.168.50.202 ]</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="handleRow" library="MavKeywords">
<arguments>
<arg>${columns}</arg>
<arg>${rowData}</arg>
<arg>${rowDict}</arg>
</arguments>
<assign>
<var>${rowDict}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw type="for" name="${columnname} | ${value} IN ZIP [ ${columns} | ${rowData} ]">
<kw type="foritem" name="${columnname} = VM_Name, ${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw type="foritem" name="${columnname} = Fixed_ip_address, ${value} = 192.168.50.202">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<msg timestamp="20191114 19:21:16.440" level="INFO">${rowDict} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'}</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${returnResult}</arg>
<arg>${rowDict}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw type="foritem" name="${eachrow} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2&#09;192.168.50.203">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{rowDict}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">&amp;{rowDict} = { }</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${eachrow}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{rowData}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{rowData} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2 | 192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="handleRow" library="MavKeywords">
<arguments>
<arg>${columns}</arg>
<arg>${rowData}</arg>
<arg>${rowDict}</arg>
</arguments>
<assign>
<var>${rowDict}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw type="for" name="${columnname} | ${value} IN ZIP [ ${columns} | ${rowData} ]">
<kw type="foritem" name="${columnname} = VM_Name, ${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw type="foritem" name="${columnname} = Fixed_ip_address, ${value} = 192.168.50.203">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<msg timestamp="20191114 19:21:16.440" level="INFO">${rowDict} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.168.50.203'}</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${returnResult}</arg>
<arg>${rowDict}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{rowsReturned} = [ {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'} | {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.1...</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.438"></status>
</kw>
<msg timestamp="20191114 19:21:16.440" level="INFO">@{vlblist} = [ {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'} | {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.1...</msg>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:12.123"></status>
</kw>
<kw type="for" name="${vlb} IN [ @{vlblist} ]">
<kw type="foritem" name="${vlb} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'}">
<kw name="cli" library="MavKeywords">
<arguments>
<arg>${vlb.Fixed_ip_address}</arg>
<arg>show table sys platform ext_ip</arg>
</arguments>
<assign>
<var>${ext_ip_out}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:16.440" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:16.440" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:20.179" level="INFO">Read output: Last login: Thu Nov 14 13:51:14 UTC 2019 from 10.10.193.140 on pts/3
Last login: Thu Nov 14 13:51:17 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:20.179" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ssh ${VNF_IP} "echo ${command}|cli"</arg>
</arguments>
<assign>
<var>${cli_out}</var>
</assign>
<msg timestamp="20191114 19:21:20.179" level="INFO">Executing command 'ssh 192.168.50.202 "echo show table sys platform ext_ip|cli"'.</msg>
<msg timestamp="20191114 19:21:20.913" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:20.913" level="INFO">${cli_out} = Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1
[?7hadmin@openstack-10 13:51:20&gt; show table sys platform ext_ip
              ...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cli_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:20.913" level="INFO">Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1
[?7hadmin@openstack-10 13:51:20&gt; show table sys platform ext_ip
                                             MASK  FK EXT                     LOGICAL               FKPROT  
NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKCOMPONENT  GRP     
------------------------------------------------------------------------------------------------------------
FE_Ext_Signalling-2074       192.168.51.201  32    tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM     
FE_Ext_Signalling_IPv6-2074  fcff:1:51::52   128   tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM     
SIPRE_CORE-static            192.168.53.200  24    eth2      EXT_IP_PHYSICAL  0        ADM-a        ADM     
SIPRE_DB-static              192.168.55.203  24    eth3      EXT_IP_PHYSICAL  0        ADM-a        ADM     
SIPRE_GRE_Tunnel-static      192.168.52.203  24    eth1      EXT_IP_PHYSICAL  0        ADM-a        ADM     
SIPRE_OAM-static             192.168.50.202  24    eth0      EXT_IP_PHYSICAL  0        ADM-a        ADM     
emxrouter-static             192.168.54.204  24    eth4      EXT_IP_PHYSICAL  0        ADM-a        ADM     
[ok][2019-11-14 13:51:20]
admin@openstack-10 13:51:20&gt; </msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cli_out}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{cli_lines}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">@{cli_lines} = [ Welcome to the ConfD CLI | admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1 | [?7hadmin@openstack-10 13:51:20&gt; show table sys platform ext_ip |       ...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${cli_lines}</arg>
<arg>3</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>@{result_list}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">@{result_list} = [                                              MASK  FK EXT                     LOGICAL               FKPROT   | NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  ...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="for" name="${item} IN [ @{result_list} ]">
<kw type="foritem" name="${item} =                                              MASK  FK EXT                     LOGICAL               FKPROT  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT  </msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKCOMPONENT  GRP     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = ------------------------------------------------------------------------------------------------------------">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = FE_Ext_Signalling-2074       192.168.51.201  32    tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = FE_Ext_Signalling_IPv6-2074  fcff:1:51::52   128   tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = SIPRE_CORE-static            192.168.53.200  24    eth2      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = SIPRE_DB-static              192.168.55.203  24    eth3      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = SIPRE_GRE_Tunnel-static      192.168.52.203  24    eth1      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = SIPRE_OAM-static             192.168.50.202  24    eth0      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw type="foritem" name="${item} = emxrouter-static             192.168.54.204  24    eth4      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:20.913" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191114 19:21:20.913" level="INFO">                                              MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKCOMPONENT  GRP      ------------------------------------------------------------------------------------------------------------ FE_Ext_Signalling-2074       192.168.51.201  32    tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM      FE_Ext_Signalling_IPv6-2074  fcff:1:51::52   128   tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM      SIPRE_CORE-static            192.168.53.200  24    eth2      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_DB-static              192.168.55.203  24    eth3      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_GRE_Tunnel-static      192.168.52.203  24    eth1      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_OAM-static             192.168.50.202  24    eth0      EXT_IP_PHYSICAL  0        ADM-a        ADM      emxrouter-static             192.168.54.204  24    eth4      EXT_IP_PHYSICAL  0        ADM-a        ADM     </msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<msg timestamp="20191114 19:21:20.913" level="INFO">${ext_ip_out} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:16.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ext_ip_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:20.913" level="INFO">                                              MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKCOMPONENT  GRP      ------------------------------------------------------------------------------------------------------------ FE_Ext_Signalling-2074       192.168.51.201  32    tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM      FE_Ext_Signalling_IPv6-2074  fcff:1:51::52   128   tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM      SIPRE_CORE-static            192.168.53.200  24    eth2      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_DB-static              192.168.55.203  24    eth3      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_GRE_Tunnel-static      192.168.52.203  24    eth1      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_OAM-static             192.168.50.202  24    eth0      EXT_IP_PHYSICAL  0        ADM-a        ADM      emxrouter-static             192.168.54.204  24    eth4      EXT_IP_PHYSICAL  0        ADM-a        ADM     </msg>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:16.440"></status>
</kw>
<kw type="foritem" name="${vlb} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.168.50.203'}">
<kw name="cli" library="MavKeywords">
<arguments>
<arg>${vlb.Fixed_ip_address}</arg>
<arg>show table sys platform ext_ip</arg>
</arguments>
<assign>
<var>${ext_ip_out}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:20.913" starttime="20191114 19:21:20.913"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:20.913" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:24.670" level="INFO">Read output: Last login: Thu Nov 14 13:51:18 UTC 2019 from 10.10.193.140 on pts/4
Last login: Thu Nov 14 13:51:22 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:24.670" starttime="20191114 19:21:20.913"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ssh ${VNF_IP} "echo ${command}|cli"</arg>
</arguments>
<assign>
<var>${cli_out}</var>
</assign>
<msg timestamp="20191114 19:21:24.670" level="INFO">Executing command 'ssh 192.168.50.203 "echo show table sys platform ext_ip|cli"'.</msg>
<msg timestamp="20191114 19:21:25.391" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:25.391" level="INFO">${cli_out} = Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2
[?7hadmin@openstack-10 13:51:24&gt; show table sys platform ext_ip
              ...</msg>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:24.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cli_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:25.391" level="INFO">Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2
[?7hadmin@openstack-10 13:51:24&gt; show table sys platform ext_ip
                                             MASK  FK EXT                     LOGICAL               FKPROT  
NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKCOMPONENT  GRP     
------------------------------------------------------------------------------------------------------------
FE_Ext_Signalling-2074       192.168.51.201  32    tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM     
FE_Ext_Signalling_IPv6-2074  fcff:1:51::52   128   tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM     
SIPRE_CORE-static            192.168.53.201  24    eth2      EXT_IP_PHYSICAL  0        ADM-a        ADM     
SIPRE_DB-static              192.168.55.204  24    eth3      EXT_IP_PHYSICAL  0        ADM-a        ADM     
SIPRE_GRE_Tunnel-static      192.168.52.204  24    eth1      EXT_IP_PHYSICAL  0        ADM-a        ADM     
SIPRE_OAM-static             192.168.50.203  24    eth0      EXT_IP_PHYSICAL  0        ADM-a        ADM     
emxrouter-static             192.168.54.205  24    eth4      EXT_IP_PHYSICAL  0        ADM-a        ADM     
[ok][2019-11-14 13:51:24]
admin@openstack-10 13:51:24&gt; </msg>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cli_out}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{cli_lines}</var>
</assign>
<msg timestamp="20191114 19:21:25.391" level="INFO">@{cli_lines} = [ Welcome to the ConfD CLI | admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2 | [?7hadmin@openstack-10 13:51:24&gt; show table sys platform ext_ip |       ...</msg>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${cli_lines}</arg>
<arg>3</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>@{result_list}</var>
</assign>
<msg timestamp="20191114 19:21:25.391" level="INFO">@{result_list} = [                                              MASK  FK EXT                     LOGICAL               FKPROT   | NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  ...</msg>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.391" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<kw type="for" name="${item} IN [ @{result_list} ]">
<kw type="foritem" name="${item} =                                              MASK  FK EXT                     LOGICAL               FKPROT  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.391" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT  </msg>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<kw type="foritem" name="${item} = NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKCOMPONENT  GRP     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.391" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<kw type="foritem" name="${item} = ------------------------------------------------------------------------------------------------------------">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.391" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.391" starttime="20191114 19:21:25.391"></status>
</kw>
<kw type="foritem" name="${item} = FE_Ext_Signalling-2074       192.168.51.201  32    tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.406" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.391"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.391"></status>
</kw>
<kw type="foritem" name="${item} = FE_Ext_Signalling_IPv6-2074  fcff:1:51::52   128   tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.406" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<kw type="foritem" name="${item} = SIPRE_CORE-static            192.168.53.201  24    eth2      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.406" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<kw type="foritem" name="${item} = SIPRE_DB-static              192.168.55.204  24    eth3      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.406" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<kw type="foritem" name="${item} = SIPRE_GRE_Tunnel-static      192.168.52.204  24    eth1      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.406" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<kw type="foritem" name="${item} = SIPRE_OAM-static             192.168.50.203  24    eth0      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.406" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<kw type="foritem" name="${item} = emxrouter-static             192.168.54.205  24    eth4      EXT_IP_PHYSICAL  0        ADM-a        ADM     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:25.406" level="INFO">${result} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191114 19:21:25.406" level="INFO">                                              MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKCOMPONENT  GRP      ------------------------------------------------------------------------------------------------------------ FE_Ext_Signalling-2074       192.168.51.201  32    tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM      FE_Ext_Signalling_IPv6-2074  fcff:1:51::52   128   tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM      SIPRE_CORE-static            192.168.53.201  24    eth2      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_DB-static              192.168.55.204  24    eth3      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_GRE_Tunnel-static      192.168.52.204  24    eth1      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_OAM-static             192.168.50.203  24    eth0      EXT_IP_PHYSICAL  0        ADM-a        ADM      emxrouter-static             192.168.54.205  24    eth4      EXT_IP_PHYSICAL  0        ADM-a        ADM     </msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<msg timestamp="20191114 19:21:25.406" level="INFO">${ext_ip_out} =                                               MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKC...</msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:20.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ext_ip_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:25.406" level="INFO">                                              MASK  FK EXT                     LOGICAL               FKPROT   NAME                         IP ADDR         SIZE  IP INTF   IP CONFIG TYPE   CARD ID  FKCOMPONENT  GRP      ------------------------------------------------------------------------------------------------------------ FE_Ext_Signalling-2074       192.168.51.201  32    tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM      FE_Ext_Signalling_IPv6-2074  fcff:1:51::52   128   tun-2074  EXT_IP_VIRTUAL   0        ADM-a        ADM      SIPRE_CORE-static            192.168.53.201  24    eth2      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_DB-static              192.168.55.204  24    eth3      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_GRE_Tunnel-static      192.168.52.204  24    eth1      EXT_IP_PHYSICAL  0        ADM-a        ADM      SIPRE_OAM-static             192.168.50.203  24    eth0      EXT_IP_PHYSICAL  0        ADM-a        ADM      emxrouter-static             192.168.54.205  24    eth4      EXT_IP_PHYSICAL  0        ADM-a        ADM     </msg>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:20.913"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:16.440"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:25.406" critical="yes" starttime="20191114 19:21:12.123"></status>
</test>
<test id="s1-t3" name="CheckPeer_vnf">
<kw name="QueryVNFM" library="MavKeywords">
<doc>This keyword queries VNFM db. Return value data structure = [{},{},{},{},.......]</doc>
<arguments>
<arg>select d.VM_Name,v.Fixed_ip_address from Deployment_Table d ,VM_Resource_Details v where v.DeploymentId = d.Id and v.connectionPointIndex like '%OAM%' and v.connectionPointIndex not like '%SDNS%' and v.connectionPointIndex like '%RE%' and d.VM_Name like '%SIP%'</arg>
</arguments>
<assign>
<var>@{vlblist}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:25.406" starttime="20191114 19:21:25.406"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:25.406" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:29.153" level="INFO">Read output: Last login: Thu Nov 14 13:51:23 UTC 2019 from 10.10.193.140 on pts/5
Last login: Thu Nov 14 13:51:26 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:29.153" starttime="20191114 19:21:25.406"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mysql -uroot -pmavenir VnfmDB -e "${statement}";</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191114 19:21:29.153" level="INFO">Executing command 'mysql -uroot -pmavenir VnfmDB -e "select d.VM_Name,v.Fixed_ip_address from Deployment_Table d ,VM_Resource_Details v where v.DeploymentId = d.Id and v.connectionPointIndex like '%OAM%' and v.connectionPointIndex not like '%SDNS%' and v.connectionPointIndex like '%RE%' and d.VM_Name like '%SIP%'";'.</msg>
<msg timestamp="20191114 19:21:29.666" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:29.666" level="INFO">${Query_result} = VM_Name	Fixed_ip_address
Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202
Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.153"></status>
</kw>
<kw name="manipulateQueryResult" library="MavKeywords">
<doc>This keyword converts str data to a list containing dictionaries</doc>
<arguments>
<arg>${Query_result}</arg>
</arguments>
<assign>
<var>@{rowsReturned}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${queryResult}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rows_with_header}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">@{rows_with_header} = [ VM_Name	Fixed_ip_address | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202 | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${rows_with_header}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>@{rows}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">@{rows} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202 | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${rows_with_header[0]}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{columns}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">@{columns} = [ VM_Name | Fixed_ip_address ]</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw type="for" name="${eachrow} IN [ @{rows} ]">
<kw type="foritem" name="${eachrow} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1&#09;192.168.50.202">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{rowDict}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">&amp;{rowDict} = { }</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${eachrow}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{rowData}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">@{rowData} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1 | 192.168.50.202 ]</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="handleRow" library="MavKeywords">
<arguments>
<arg>${columns}</arg>
<arg>${rowData}</arg>
<arg>${rowDict}</arg>
</arguments>
<assign>
<var>${rowDict}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw type="for" name="${columnname} | ${value} IN ZIP [ ${columns} | ${rowData} ]">
<kw type="foritem" name="${columnname} = VM_Name, ${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw type="foritem" name="${columnname} = Fixed_ip_address, ${value} = 192.168.50.202">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<msg timestamp="20191114 19:21:29.666" level="INFO">${rowDict} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'}</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${returnResult}</arg>
<arg>${rowDict}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw type="foritem" name="${eachrow} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2&#09;192.168.50.203">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{rowDict}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">&amp;{rowDict} = { }</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${eachrow}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{rowData}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">@{rowData} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2 | 192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="handleRow" library="MavKeywords">
<arguments>
<arg>${columns}</arg>
<arg>${rowData}</arg>
<arg>${rowDict}</arg>
</arguments>
<assign>
<var>${rowDict}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:29.666" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:29.666" starttime="20191114 19:21:29.666"></status>
</kw>
<kw type="for" name="${columnname} | ${value} IN ZIP [ ${columns} | ${rowData} ]">
<kw type="foritem" name="${columnname} = VM_Name, ${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.677"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.677"></status>
</kw>
<kw type="foritem" name="${columnname} = Fixed_ip_address, ${value} = 192.168.50.203">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.677"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.677"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.677"></status>
</kw>
<msg timestamp="20191114 19:21:29.677" level="INFO">${rowDict} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.168.50.203'}</msg>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.666"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${returnResult}</arg>
<arg>${rowDict}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.677"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.666"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.666"></status>
</kw>
<msg timestamp="20191114 19:21:29.677" level="INFO">@{rowsReturned} = [ {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'} | {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.1...</msg>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.666"></status>
</kw>
<msg timestamp="20191114 19:21:29.677" level="INFO">@{vlblist} = [ {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'} | {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.1...</msg>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:25.406"></status>
</kw>
<kw type="for" name="${vlb} IN [ @{vlblist} ]">
<kw type="foritem" name="${vlb} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'}">
<kw name="cli" library="MavKeywords">
<arguments>
<arg>${vlb.Fixed_ip_address}</arg>
<arg>show table sys platform peer_vnf</arg>
</arguments>
<assign>
<var>${peer_vnf_out}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:29.677" starttime="20191114 19:21:29.677"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:29.677" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:33.459" level="INFO">Read output: Last login: Thu Nov 14 13:51:27 UTC 2019 from 10.10.193.140 on pts/6
Last login: Thu Nov 14 13:51:30 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:33.459" starttime="20191114 19:21:29.677"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ssh ${VNF_IP} "echo ${command}|cli"</arg>
</arguments>
<assign>
<var>${cli_out}</var>
</assign>
<msg timestamp="20191114 19:21:33.459" level="INFO">Executing command 'ssh 192.168.50.202 "echo show table sys platform peer_vnf|cli"'.</msg>
<msg timestamp="20191114 19:21:34.178" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:34.178" level="INFO">${cli_out} = Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1
[?7hadmin@openstack-10 13:51:33&gt; show table sys platform peer_vnf
VNF         ...</msg>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:33.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cli_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:34.178" level="INFO">Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1
[?7hadmin@openstack-10 13:51:33&gt; show table sys platform peer_vnf
VNF                                                            VNF                   HEALTH                               
ID    LVN ID          SITE ID                                  TYPE  STATUS          STATUS  INS TIME STAMP       WEIGHT  
--------------------------------------------------------------------------------------------------------------------------
2073  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  TAS   VNF_STATUS_INS  100     -                    100     
2074  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  VLB   VNF_STATUS_INS  100     2019-10-30 10:38:20  80      
2076  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  CAS   VNF_STATUS_INS  100     -                    100     
[ok][2019-11-14 13:51:33]
admin@openstack-10 13:51:33&gt; </msg>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:34.178"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cli_out}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{cli_lines}</var>
</assign>
<msg timestamp="20191114 19:21:34.178" level="INFO">@{cli_lines} = [ Welcome to the ConfD CLI | admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1 | [?7hadmin@openstack-10 13:51:33&gt; show table sys platform peer_vnf | VNF ...</msg>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:34.178"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${cli_lines}</arg>
<arg>3</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>@{result_list}</var>
</assign>
<msg timestamp="20191114 19:21:34.178" level="INFO">@{result_list} = [ VNF                                                            VNF                   HEALTH                                | ID    LVN ID          SITE ID                                  TYPE  STAT...</msg>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:34.178"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:34.178" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:34.178"></status>
</kw>
<kw type="for" name="${item} IN [ @{result_list} ]">
<kw type="foritem" name="${item} = VNF                                                            VNF                   HEALTH                               ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:34.178" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                               </msg>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:34.178"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:34.178"></status>
</kw>
<kw type="foritem" name="${item} = ID    LVN ID          SITE ID                                  TYPE  STATUS          STATUS  INS TIME STAMP       WEIGHT  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:34.178" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:34.178"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:34.178" starttime="20191114 19:21:34.178"></status>
</kw>
<kw type="foritem" name="${item} = --------------------------------------------------------------------------------------------------------------------------">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:34.178" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.178"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.178"></status>
</kw>
<kw type="foritem" name="${item} = 2073  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  TAS   VNF_STATUS_INS  100     -                    100     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:34.193" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.193"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.193"></status>
</kw>
<kw type="foritem" name="${item} = 2074  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  VLB   VNF_STATUS_INS  100     2019-10-30 10:38:20  80      ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:34.193" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.193"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.193"></status>
</kw>
<kw type="foritem" name="${item} = 2076  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  CAS   VNF_STATUS_INS  100     -                    100     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:34.193" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.193"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.193"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191114 19:21:34.193" level="INFO"> VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS          STATUS  INS TIME STAMP       WEIGHT   -------------------------------------------------------------------------------------------------------------------------- 2073  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  TAS   VNF_STATUS_INS  100     -                    100      2074  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  VLB   VNF_STATUS_INS  100     2019-10-30 10:38:20  80       2076  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  CAS   VNF_STATUS_INS  100     -                    100     </msg>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:34.193"></status>
</kw>
<msg timestamp="20191114 19:21:34.193" level="INFO">${peer_vnf_out} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:34.193" starttime="20191114 19:21:29.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${peer_vnf_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:34.199" level="INFO"> VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS          STATUS  INS TIME STAMP       WEIGHT   -------------------------------------------------------------------------------------------------------------------------- 2073  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  TAS   VNF_STATUS_INS  100     -                    100      2074  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  VLB   VNF_STATUS_INS  100     2019-10-30 10:38:20  80       2076  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  CAS   VNF_STATUS_INS  100     -                    100     </msg>
<status status="PASS" endtime="20191114 19:21:34.199" starttime="20191114 19:21:34.193"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:34.199" starttime="20191114 19:21:29.677"></status>
</kw>
<kw type="foritem" name="${vlb} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.168.50.203'}">
<kw name="cli" library="MavKeywords">
<arguments>
<arg>${vlb.Fixed_ip_address}</arg>
<arg>show table sys platform peer_vnf</arg>
</arguments>
<assign>
<var>${peer_vnf_out}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:34.199" starttime="20191114 19:21:34.199"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:34.199" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:37.965" level="INFO">Read output: Last login: Thu Nov 14 13:51:31 UTC 2019 from 10.10.193.140 on pts/7
Last login: Thu Nov 14 13:51:35 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:37.965" starttime="20191114 19:21:34.199"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ssh ${VNF_IP} "echo ${command}|cli"</arg>
</arguments>
<assign>
<var>${cli_out}</var>
</assign>
<msg timestamp="20191114 19:21:37.965" level="INFO">Executing command 'ssh 192.168.50.203 "echo show table sys platform peer_vnf|cli"'.</msg>
<msg timestamp="20191114 19:21:38.684" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:38.684" level="INFO">${cli_out} = Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2
[?7hadmin@openstack-10 13:51:37&gt; show table sys platform peer_vnf
VNF         ...</msg>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:37.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cli_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:38.684" level="INFO">Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2
[?7hadmin@openstack-10 13:51:37&gt; show table sys platform peer_vnf
VNF                                                            VNF                   HEALTH                               
ID    LVN ID          SITE ID                                  TYPE  STATUS          STATUS  INS TIME STAMP       WEIGHT  
--------------------------------------------------------------------------------------------------------------------------
2073  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  TAS   VNF_STATUS_INS  100     -                    100     
2074  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  VLB   VNF_STATUS_INS  100     2019-10-30 10:38:20  80      
2076  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  CAS   VNF_STATUS_INS  100     -                    100     
[ok][2019-11-14 13:51:37]
admin@openstack-10 13:51:37&gt; </msg>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cli_out}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{cli_lines}</var>
</assign>
<msg timestamp="20191114 19:21:38.684" level="INFO">@{cli_lines} = [ Welcome to the ConfD CLI | admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2 | [?7hadmin@openstack-10 13:51:37&gt; show table sys platform peer_vnf | VNF ...</msg>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${cli_lines}</arg>
<arg>3</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>@{result_list}</var>
</assign>
<msg timestamp="20191114 19:21:38.684" level="INFO">@{result_list} = [ VNF                                                            VNF                   HEALTH                                | ID    LVN ID          SITE ID                                  TYPE  STAT...</msg>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:38.684" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<kw type="for" name="${item} IN [ @{result_list} ]">
<kw type="foritem" name="${item} = VNF                                                            VNF                   HEALTH                               ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:38.684" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                               </msg>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<kw type="foritem" name="${item} = ID    LVN ID          SITE ID                                  TYPE  STATUS          STATUS  INS TIME STAMP       WEIGHT  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:38.684" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<kw type="foritem" name="${item} = --------------------------------------------------------------------------------------------------------------------------">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:38.684" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.684" starttime="20191114 19:21:38.684"></status>
</kw>
<kw type="foritem" name="${item} = 2073  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  TAS   VNF_STATUS_INS  100     -                    100     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:38.700" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<kw type="foritem" name="${item} = 2074  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  VLB   VNF_STATUS_INS  100     2019-10-30 10:38:20  80      ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:38.700" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<kw type="foritem" name="${item} = 2076  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  CAS   VNF_STATUS_INS  100     -                    100     ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:38.700" level="INFO">${result} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191114 19:21:38.700" level="INFO"> VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS          STATUS  INS TIME STAMP       WEIGHT   -------------------------------------------------------------------------------------------------------------------------- 2073  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  TAS   VNF_STATUS_INS  100     -                    100      2074  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  VLB   VNF_STATUS_INS  100     2019-10-30 10:38:20  80       2076  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  CAS   VNF_STATUS_INS  100     -                    100     </msg>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<msg timestamp="20191114 19:21:38.700" level="INFO">${peer_vnf_out} =  VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS ...</msg>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:34.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${peer_vnf_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:38.700" level="INFO"> VNF                                                            VNF                   HEALTH                                ID    LVN ID          SITE ID                                  TYPE  STATUS          STATUS  INS TIME STAMP       WEIGHT   -------------------------------------------------------------------------------------------------------------------------- 2073  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  TAS   VNF_STATUS_INS  100     -                    100      2074  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  VLB   VNF_STATUS_INS  100     2019-10-30 10:38:20  80       2076  FE_RE_LVN_1-10  Openstack-10.69.30.40-vlbfe-st-vlbfe-st  CAS   VNF_STATUS_INS  100     -                    100     </msg>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:34.199"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:29.677"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:38.700" critical="yes" starttime="20191114 19:21:25.406"></status>
</test>
<test id="s1-t4" name="CheckPeer_ip">
<kw name="QueryVNFM" library="MavKeywords">
<doc>This keyword queries VNFM db. Return value data structure = [{},{},{},{},.......]</doc>
<arguments>
<arg>select d.VM_Name,v.Fixed_ip_address from Deployment_Table d ,VM_Resource_Details v where v.DeploymentId = d.Id and v.connectionPointIndex like '%OAM%' and v.connectionPointIndex not like '%SDNS%' and v.connectionPointIndex like '%RE%' and d.VM_Name like '%SIP%'</arg>
</arguments>
<assign>
<var>@{vlblist}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:38.700" starttime="20191114 19:21:38.700"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:38.700" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:42.457" level="INFO">Read output: Last login: Thu Nov 14 13:51:36 UTC 2019 from 10.10.193.140 on pts/8
Last login: Thu Nov 14 13:51:39 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:42.457" starttime="20191114 19:21:38.700"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mysql -uroot -pmavenir VnfmDB -e "${statement}";</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191114 19:21:42.457" level="INFO">Executing command 'mysql -uroot -pmavenir VnfmDB -e "select d.VM_Name,v.Fixed_ip_address from Deployment_Table d ,VM_Resource_Details v where v.DeploymentId = d.Id and v.connectionPointIndex like '%OAM%' and v.connectionPointIndex not like '%SDNS%' and v.connectionPointIndex like '%RE%' and d.VM_Name like '%SIP%'";'.</msg>
<msg timestamp="20191114 19:21:43.060" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:43.060" level="INFO">${Query_result} = VM_Name	Fixed_ip_address
Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202
Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:42.457"></status>
</kw>
<kw name="manipulateQueryResult" library="MavKeywords">
<doc>This keyword converts str data to a list containing dictionaries</doc>
<arguments>
<arg>${Query_result}</arg>
</arguments>
<assign>
<var>@{rowsReturned}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${queryResult}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rows_with_header}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{rows_with_header} = [ VM_Name	Fixed_ip_address | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202 | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${rows_with_header}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>@{rows}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{rows} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1	192.168.50.202 | Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2	192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${rows_with_header[0]}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{columns}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{columns} = [ VM_Name | Fixed_ip_address ]</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw type="for" name="${eachrow} IN [ @{rows} ]">
<kw type="foritem" name="${eachrow} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1&#09;192.168.50.202">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{rowDict}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">&amp;{rowDict} = { }</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${eachrow}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{rowData}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{rowData} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1 | 192.168.50.202 ]</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="handleRow" library="MavKeywords">
<arguments>
<arg>${columns}</arg>
<arg>${rowData}</arg>
<arg>${rowDict}</arg>
</arguments>
<assign>
<var>${rowDict}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw type="for" name="${columnname} | ${value} IN ZIP [ ${columns} | ${rowData} ]">
<kw type="foritem" name="${columnname} = VM_Name, ${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw type="foritem" name="${columnname} = Fixed_ip_address, ${value} = 192.168.50.202">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<msg timestamp="20191114 19:21:43.060" level="INFO">${rowDict} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'}</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${returnResult}</arg>
<arg>${rowDict}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw type="foritem" name="${eachrow} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2&#09;192.168.50.203">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<assign>
<var>&amp;{rowDict}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">&amp;{rowDict} = { }</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${eachrow}</arg>
<arg>\t</arg>
</arguments>
<assign>
<var>@{rowData}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{rowData} = [ Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2 | 192.168.50.203 ]</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="handleRow" library="MavKeywords">
<arguments>
<arg>${columns}</arg>
<arg>${rowData}</arg>
<arg>${rowDict}</arg>
</arguments>
<assign>
<var>${rowDict}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{returnResult}</var>
</assign>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{returnResult} = [ ]</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw type="for" name="${columnname} | ${value} IN ZIP [ ${columns} | ${rowData} ]">
<kw type="foritem" name="${columnname} = VM_Name, ${value} = Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw type="foritem" name="${columnname} = Fixed_ip_address, ${value} = 192.168.50.203">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${rowDict}</arg>
<arg>${columnname}=${value}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<msg timestamp="20191114 19:21:43.060" level="INFO">${rowDict} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.168.50.203'}</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${returnResult}</arg>
<arg>${rowDict}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{rowsReturned} = [ {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'} | {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.1...</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<msg timestamp="20191114 19:21:43.060" level="INFO">@{vlblist} = [ {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'} | {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.1...</msg>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:38.700"></status>
</kw>
<kw type="for" name="${vlb} IN [ @{vlblist} ]">
<kw type="foritem" name="${vlb} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE1', u'Fixed_ip_address': u'192.168.50.202'}">
<kw name="cli" library="MavKeywords">
<arguments>
<arg>${vlb.Fixed_ip_address}</arg>
<arg>show table sys platform peer_ip</arg>
</arguments>
<assign>
<var>${peer_ip_out}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:43.060" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:43.060" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:46.773" level="INFO">Read output: Last login: Thu Nov 14 13:51:40 UTC 2019 from 10.10.193.140 on pts/9
Last login: Thu Nov 14 13:51:44 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:46.773" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ssh ${VNF_IP} "echo ${command}|cli"</arg>
</arguments>
<assign>
<var>${cli_out}</var>
</assign>
<msg timestamp="20191114 19:21:46.773" level="INFO">Executing command 'ssh 192.168.50.202 "echo show table sys platform peer_ip|cli"'.</msg>
<msg timestamp="20191114 19:21:47.475" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:47.475" level="INFO">${cli_out} = Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1
[?7hadmin@openstack-10 13:51:46&gt; show table sys platform peer_ip
             ...</msg>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:46.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cli_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:47.475" level="INFO">Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1
[?7hadmin@openstack-10 13:51:46&gt; show table sys platform peer_ip
                                                 VNF   
ID       TRAFFIC TYPE            IP ADDRESS      ID    
-------------------------------------------------------
2073001  TAS_CORE                192.168.53.211  2073  
2073002  emxrouter               192.168.54.215  2073  
2073003  TAS_DB                  192.168.55.214  2073  
2074001  FE_Ext_Signalling       192.168.51.201  2074  
2074002  FE_Internal             192.168.52.201  2074  
2074003  emxrouter               192.168.54.201  2074  
2074004  FE_DB                   192.168.55.201  2074  
2074005  FE_Ext_Signalling_IPv6  fcff:1:51::52   2074  
2076001  CAS                     192.168.56.200  2076  
[ok][2019-11-14 13:51:46]
admin@openstack-10 13:51:46&gt; </msg>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:47.475"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cli_out}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{cli_lines}</var>
</assign>
<msg timestamp="20191114 19:21:47.475" level="INFO">@{cli_lines} = [ Welcome to the ConfD CLI | admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre1 | [?7hadmin@openstack-10 13:51:46&gt; show table sys platform peer_ip |      ...</msg>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:47.475"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${cli_lines}</arg>
<arg>3</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>@{result_list}</var>
</assign>
<msg timestamp="20191114 19:21:47.475" level="INFO">@{result_list} = [                                                  VNF    | ID       TRAFFIC TYPE            IP ADDRESS      ID     | ------------------------------------------------------- | 2073001  TAS_CORE       ...</msg>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:47.475"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.475" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:47.475"></status>
</kw>
<kw type="for" name="${item} IN [ @{result_list} ]">
<kw type="foritem" name="${item} =                                                  VNF   ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.475" level="INFO">${result} =                                                   VNF   </msg>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:47.475"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:47.475"></status>
</kw>
<kw type="foritem" name="${item} = ID       TRAFFIC TYPE            IP ADDRESS      ID    ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.475" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID    </msg>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:47.475"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.475" starttime="20191114 19:21:47.475"></status>
</kw>
<kw type="foritem" name="${item} = -------------------------------------------------------">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     -------------------------------------------------------</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.475"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.475"></status>
</kw>
<kw type="foritem" name="${item} = 2073001  TAS_CORE                192.168.53.211  2073  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw type="foritem" name="${item} = 2073002  emxrouter               192.168.54.215  2073  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw type="foritem" name="${item} = 2073003  TAS_DB                  192.168.55.214  2073  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw type="foritem" name="${item} = 2074001  FE_Ext_Signalling       192.168.51.201  2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw type="foritem" name="${item} = 2074002  FE_Internal             192.168.52.201  2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw type="foritem" name="${item} = 2074003  emxrouter               192.168.54.201  2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw type="foritem" name="${item} = 2074004  FE_DB                   192.168.55.201  2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw type="foritem" name="${item} = 2074005  FE_Ext_Signalling_IPv6  fcff:1:51::52   2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw type="foritem" name="${item} = 2076001  CAS                     192.168.56.200  2076  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:47.490" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191114 19:21:47.490" level="INFO">                                                  VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE                192.168.53.211  2073   2073002  emxrouter               192.168.54.215  2073   2073003  TAS_DB                  192.168.55.214  2073   2074001  FE_Ext_Signalling       192.168.51.201  2074   2074002  FE_Internal             192.168.52.201  2074   2074003  emxrouter               192.168.54.201  2074   2074004  FE_DB                   192.168.55.201  2074   2074005  FE_Ext_Signalling_IPv6  fcff:1:51::52   2074   2076001  CAS                     192.168.56.200  2076  </msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<msg timestamp="20191114 19:21:47.490" level="INFO">${peer_ip_out} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:43.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${peer_ip_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:47.490" level="INFO">                                                  VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE                192.168.53.211  2073   2073002  emxrouter               192.168.54.215  2073   2073003  TAS_DB                  192.168.55.214  2073   2074001  FE_Ext_Signalling       192.168.51.201  2074   2074002  FE_Internal             192.168.52.201  2074   2074003  emxrouter               192.168.54.201  2074   2074004  FE_DB                   192.168.55.201  2074   2074005  FE_Ext_Signalling_IPv6  fcff:1:51::52   2074   2076001  CAS                     192.168.56.200  2076  </msg>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:43.060"></status>
</kw>
<kw type="foritem" name="${vlb} = {u'VM_Name': u'Openstack-10.69.30.40-vlbfe-st-vlbfe-st-SIPRE2', u'Fixed_ip_address': u'192.168.50.203'}">
<kw name="cli" library="MavKeywords">
<arguments>
<arg>${vlb.Fixed_ip_address}</arg>
<arg>show table sys platform peer_ip</arg>
</arguments>
<assign>
<var>${peer_ip_out}</var>
</assign>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${VNFM_IP}</arg>
</arguments>
<status status="PASS" endtime="20191114 19:21:47.490" starttime="20191114 19:21:47.490"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${VNFM_username}</arg>
<arg>${VNFM_password}</arg>
</arguments>
<msg timestamp="20191114 19:21:47.490" level="INFO">Logging into '10.69.30.109:22' as 'root'.</msg>
<msg timestamp="20191114 19:21:51.203" level="INFO">Read output: Last login: Thu Nov 14 13:51:45 UTC 2019 from 10.10.193.140 on pts/10
Last login: Thu Nov 14 13:51:48 2019 from 10.10.193.140
[root@vnfm-r71846 ~]#</msg>
<status status="PASS" endtime="20191114 19:21:51.203" starttime="20191114 19:21:47.490"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ssh ${VNF_IP} "echo ${command}|cli"</arg>
</arguments>
<assign>
<var>${cli_out}</var>
</assign>
<msg timestamp="20191114 19:21:51.203" level="INFO">Executing command 'ssh 192.168.50.203 "echo show table sys platform peer_ip|cli"'.</msg>
<msg timestamp="20191114 19:21:51.920" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20191114 19:21:51.920" level="INFO">${cli_out} = Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2
[?7hadmin@openstack-10 13:51:50&gt; show table sys platform peer_ip
             ...</msg>
<status status="PASS" endtime="20191114 19:21:51.920" starttime="20191114 19:21:51.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${cli_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:51.920" level="INFO">Welcome to the ConfD CLI
admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2
[?7hadmin@openstack-10 13:51:50&gt; show table sys platform peer_ip
                                                 VNF   
ID       TRAFFIC TYPE            IP ADDRESS      ID    
-------------------------------------------------------
2073001  TAS_CORE                192.168.53.211  2073  
2073002  emxrouter               192.168.54.215  2073  
2073003  TAS_DB                  192.168.55.214  2073  
2074001  FE_Ext_Signalling       192.168.51.201  2074  
2074002  FE_Internal             192.168.52.201  2074  
2074003  emxrouter               192.168.54.201  2074  
2074004  FE_DB                   192.168.55.201  2074  
2074005  FE_Ext_Signalling_IPv6  fcff:1:51::52   2074  
2076001  CAS                     192.168.56.200  2076  
[ok][2019-11-14 13:51:50]
admin@openstack-10 13:51:50&gt; </msg>
<status status="PASS" endtime="20191114 19:21:51.920" starttime="20191114 19:21:51.920"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cli_out}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{cli_lines}</var>
</assign>
<msg timestamp="20191114 19:21:51.920" level="INFO">@{cli_lines} = [ Welcome to the ConfD CLI | admin connected from 192.168.50.249 using ssh on openstack-10.69.30.40-vlbfe-st-vlbfe-st-sipre2 | [?7hadmin@openstack-10 13:51:50&gt; show table sys platform peer_ip |      ...</msg>
<status status="PASS" endtime="20191114 19:21:51.920" starttime="20191114 19:21:51.920"></status>
</kw>
<kw name="Get Slice From List" library="Collections">
<doc>Returns a slice of the given list between ``start`` and ``end`` indexes.</doc>
<arguments>
<arg>${cli_lines}</arg>
<arg>3</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>@{result_list}</var>
</assign>
<msg timestamp="20191114 19:21:51.920" level="INFO">@{result_list} = [                                                  VNF    | ID       TRAFFIC TYPE            IP ADDRESS      ID     | ------------------------------------------------------- | 2073001  TAS_CORE       ...</msg>
<status status="PASS" endtime="20191114 19:21:51.920" starttime="20191114 19:21:51.920"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.920" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191114 19:21:51.920" starttime="20191114 19:21:51.920"></status>
</kw>
<kw type="for" name="${item} IN [ @{result_list} ]">
<kw type="foritem" name="${item} =                                                  VNF   ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.920" level="INFO">${result} =                                                   VNF   </msg>
<status status="PASS" endtime="20191114 19:21:51.920" starttime="20191114 19:21:51.920"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.920" starttime="20191114 19:21:51.920"></status>
</kw>
<kw type="foritem" name="${item} = ID       TRAFFIC TYPE            IP ADDRESS      ID    ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID    </msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.920"></status>
</kw>
<kw type="foritem" name="${item} = -------------------------------------------------------">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     -------------------------------------------------------</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2073001  TAS_CORE                192.168.53.211  2073  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2073002  emxrouter               192.168.54.215  2073  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2073003  TAS_DB                  192.168.55.214  2073  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2074001  FE_Ext_Signalling       192.168.51.201  2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2074002  FE_Internal             192.168.52.201  2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2074003  emxrouter               192.168.54.201  2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2074004  FE_DB                   192.168.55.201  2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2074005  FE_Ext_Signalling_IPv6  fcff:1:51::52   2074  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<kw type="foritem" name="${item} = 2076001  CAS                     192.168.56.200  2076  ">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${result}</arg>
<arg>${item}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191114 19:21:51.935" level="INFO">${result} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20191114 19:21:51.935" level="INFO">                                                  VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE                192.168.53.211  2073   2073002  emxrouter               192.168.54.215  2073   2073003  TAS_DB                  192.168.55.214  2073   2074001  FE_Ext_Signalling       192.168.51.201  2074   2074002  FE_Internal             192.168.52.201  2074   2074003  emxrouter               192.168.54.201  2074   2074004  FE_DB                   192.168.55.201  2074   2074005  FE_Ext_Signalling_IPv6  fcff:1:51::52   2074   2076001  CAS                     192.168.56.200  2076  </msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<msg timestamp="20191114 19:21:51.935" level="INFO">${peer_ip_out} =                                                   VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE              ...</msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:47.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${peer_ip_out}</arg>
</arguments>
<msg timestamp="20191114 19:21:51.935" level="INFO">                                                  VNF    ID       TRAFFIC TYPE            IP ADDRESS      ID     ------------------------------------------------------- 2073001  TAS_CORE                192.168.53.211  2073   2073002  emxrouter               192.168.54.215  2073   2073003  TAS_DB                  192.168.55.214  2073   2074001  FE_Ext_Signalling       192.168.51.201  2074   2074002  FE_Internal             192.168.52.201  2074   2074003  emxrouter               192.168.54.201  2074   2074004  FE_DB                   192.168.55.201  2074   2074005  FE_Ext_Signalling_IPv6  fcff:1:51::52   2074   2076001  CAS                     192.168.56.200  2076  </msg>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:51.935"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:47.490"></status>
</kw>
<status status="PASS" endtime="20191114 19:21:51.935" starttime="20191114 19:21:43.060"></status>
</kw>
<status status="PASS" endtime="20191114 19:22:56.926" critical="yes" starttime="20191114 19:21:38.700"></status>
</test>
<status status="PASS" endtime="20191114 19:22:56.926" starttime="20191114 19:20:58.734"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Vlb Sanity" pass="4">Vlb Sanity</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
